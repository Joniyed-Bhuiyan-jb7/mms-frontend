package bd.edu.seu.messmanagementsystemfrontend.ui.member;import bd.edu.seu.messmanagementsystemfrontend.exceptions.ResourceNotFoundException;import bd.edu.seu.messmanagementsystemfrontend.model.DepositInformation;import bd.edu.seu.messmanagementsystemfrontend.service.MemberService;import bd.edu.seu.messmanagementsystemfrontend.ui.Footer;import com.vaadin.flow.component.grid.Grid;import com.vaadin.flow.component.html.Div;import com.vaadin.flow.component.html.Label;import com.vaadin.flow.component.notification.Notification;import com.vaadin.flow.component.orderedlayout.VerticalLayout;import com.vaadin.flow.component.textfield.TextArea;import com.vaadin.flow.router.Route;import javax.servlet.http.HttpSession;import java.time.LocalDate;import java.util.List;@Route("memberAccounts")public class MemberAccounts extends VerticalLayout {    private MemberService memberService;    public MemberAccounts(HttpSession httpSession , MemberService memberService) {        super();        this.memberService = memberService;        MemberHeader memberHeader = new MemberHeader(httpSession);        memberHeader.addAttachListener(attachEvent -> {            String userRole =(String) httpSession.getAttribute("user");            if(userRole==null) userRole="unknown";            Notification.show(userRole);            if(!userRole.equals("Member") && !userRole.equals("Admin")&&!userRole.equals("Manager")){                httpSession.removeAttribute("user");                memberHeader.getUI().ifPresent(ui -> ui.navigate("login"));            }        });        Div body = new Div();        body.setSizeFull();        TextArea textArea = new TextArea();        textArea.setSizeFull();        VerticalLayout verticalLayout = new VerticalLayout();        verticalLayout.add(new Label("Member accounts"),textArea,new Label("Member deposit list of this month"));        body.add(verticalLayout);        if(httpSession.getAttribute("username")!=null){            body.add(getGrid(httpSession.getAttribute("username").toString()));        }        double sumOfTotaldeposit = 0;        double sumOfTotalMeal=0;        try {            sumOfTotaldeposit = memberService.getSumOfTotalDeposit((String)httpSession.getAttribute("username"));        } catch (ResourceNotFoundException e) {        }        try {            sumOfTotalMeal = memberService.getSumOfTotalMeal((String) httpSession.getAttribute("username"));        } catch (ResourceNotFoundException e) {        }        textArea.setValue("Total deposit of this month : "+sumOfTotaldeposit+"\nTotal meal of this month "+sumOfTotalMeal);        Footer footer = new Footer();        add(memberHeader,body,footer);    }    public Grid<DepositInformation> getGrid(String name){        Grid<DepositInformation> depositInformationGrid = new Grid<>(DepositInformation.class);        List<DepositInformation> depositList;        try {            depositList = memberService.getDepositList(LocalDate.now().getMonthValue(), LocalDate.now().getYear(),name);            depositInformationGrid.setItems(depositList);        } catch (ResourceNotFoundException e) {        }        return depositInformationGrid;    }}